{"version":3,"sources":["app/StateProvider.js","core/firebase.js","app/components/header/Header.js","app/components/product/Product.js","app/home/Home.js","core/good.js","core/reducer.js","app/components/subtotal/Subtotal.js","app/components/checkoutproduct/CheckoutProduct.js","app/checkout/Checkout.js","app/login/Login.js","core/axios.js","app/payment/Payment.js","app/components/order/Order.js","app/orders/Orders.js","app/App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","basket","user","className","to","src","type","onClick","signOut","email","length","Product","id","title","image","price","rating","dispatch","Array","fill","map","_","i","alt","item","Home","React","useState","fp_goods","setFPGoods","fetch","method","then","response","status","json","result","data","console","log","good_section","len","push","slice","section","good","name","getBasketTotal","reduce","amount","state","action","index","findIndex","basketItem","newBasket","splice","warn","Subtotal","history","useHistory","renderText","decimalScale","displayType","thousandSeparator","prefix","e","CheckoutProduct","hideButton","Checkout","Login","setEmail","password","setPassword","onChange","target","preventDefault","signInWithEmailAndPassword","catch","error","alert","message","createUserWithEmailAndPassword","instance","axios","create","baseURL","Payment","stripe","useStripe","elements","useElements","succeeded","setSucceeded","processing","setProcessing","setError","disabled","setDisabled","clientSecret","setClientSecret","useEffect","a","url","getClientSecret","handleSubmit","event","confirmCardPayment","payment_method","card","getElement","CardElement","paymentIntent","collection","doc","uid","set","created","replace","onSubmit","empty","Order","order","moment","unix","format","Orders","orders","setOrders","orderBy","onSnapshot","snapshot","docs","promise","loadStripe","App","onAuthStateChanged","authUser","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54e6cf65.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\n// Prepares the dataLayer\nexport const StateContext = createContext();\n\n// Wrap our app and provide the Data layer\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\n// Pull information from the data layer\nexport const useStateValue = () => useContext(StateContext);\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCcPSKlYtpdzBoAC8soeSmIARMzVKzrf5I\",\n  authDomain: \"challenge-4b2b2.firebaseapp.com\",\n  databaseURL: \"https://challenge-4b2b2.firebaseio.com\",\n  projectId: \"challenge-4b2b2\",\n  storageBucket: \"challenge-4b2b2.appspot.com\",\n  messagingSenderId: \"962418448875\",\n  appId: \"1:962418448875:web:f6cce5eeaf819481f661ae\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };","import React from \"react\";\nimport \"./Header.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport { Link } from \"react-router-dom\";\nimport { useStateValue } from \"../../StateProvider\";\nimport { auth } from \"../../../core/firebase\";\n\nfunction Header() {\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  const handleAuthenticaton = () => {\n    if (user) {\n      auth.signOut();\n    }\n  }\n\n  return (\n    <div className=\"header\">\n      <Link to=\"/\">\n        <img\n          className=\"header__logo\"\n          src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"\n        />\n      </Link>\n\n      <div className=\"header__search\">\n        <input className=\"header__searchInput\" type=\"text\" />\n        <SearchIcon className=\"header__searchIcon\" />\n      </div>\n\n      <div className=\"header__nav\">\n        <Link to={!user && '/login'}>\n          <div onClick={handleAuthenticaton} className=\"header__option\">\n            <span className=\"header__optionLineOne\">Hello {!user ? 'Guest' : user.email}</span>\n            <span className=\"header__optionLineTwo\">{user ? 'Sign Out' : 'Sign In'}</span>\n          </div>\n        </Link>\n\n        <Link to='/orders'>\n          <div className=\"header__option\">\n            <span className=\"header__optionLineOne\">Returns</span>\n            <span className=\"header__optionLineTwo\">& Orders</span>\n          </div>\n        </Link>\n        \n\n        <div className=\"header__option\">\n          <span className=\"header__optionLineOne\">Your</span>\n          <span className=\"header__optionLineTwo\">Prime</span>\n        </div>\n\n        <Link to=\"/checkout\">\n          <div className=\"header__optionBasket\">\n            <ShoppingBasketIcon />\n            <span className=\"header__optionLineTwo header__basketCount\">\n              {basket?.length}\n            </span>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./Product.css\";\nimport { useStateValue } from \"../../StateProvider\";\n\nfunction Product({ id, title, image, price, rating }) {\n  const [{ basket }, dispatch] = useStateValue();\n\n  const addToBasket = () => {\n    // dispatch the item into the data layer\n    dispatch({\n      type: \"ADD_TO_BASKET\",\n      item: {\n        id: id,\n        title: title,\n        image: image,\n        price: price,\n        rating: rating,\n      },\n    });\n  };\n\n  return (\n    <div className=\"product\">\n      <div className=\"product__info\">\n        <p>{title}</p>\n        <p className=\"product__price\">\n          <small>$</small>\n          <strong>{price}</strong>\n        </p>\n        <div className=\"product__rating\">\n          {Array(rating)\n            .fill()\n            .map((_, i) => (\n              <p>🌟</p>\n            ))}\n        </div>\n      </div>\n\n      <img src={image} alt=\"\" />\n\n      <button onClick={addToBasket}>Add to Basket</button>\n    </div>\n  );\n}\n\nexport default Product;\n","import React from \"react\";\nimport \"./Home.css\";\nimport Product from \"../components/product/Product\";\nimport { getFrontPageGoods } from \"../../core/good\";\n\nconst Home = () => {\n\n  const [ fp_goods, setFPGoods ] = React.useState([])\n\n  React.useState(()=>{\n    getFrontPageGoods()\n    .then(data=>{\n      console.log(data)\n      var good_section = []\n      for (var i=0, len=data.result.length;i<len;i+=3){\n        good_section.push(data.result.slice(i,i+2+(i+1)%2))\n      }\n      setFPGoods(good_section)\n    })\n  })\n\n  return (\n    <div className=\"home\">\n      <div className=\"home__container\">\n        <img\n          className=\"home__image\"\n          src=\"https://images-eu.ssl-images-amazon.com/images/G/02/digital/video/merch2016/Hero/Covid19/Generic/GWBleedingHero_ENG_COVIDUPDATE__XSite_1500x600_PV_en-GB._CB428684220_.jpg\"\n          alt=\"\"\n        />\n\n        {fp_goods.map(section=>\n          <div className=\"home__row\">\n            {section.map(good=>\n              <Product\n                id={good.id}\n                title={good.name}\n                price={good.price}\n                rating={good.rating}\n                image={good.image}\n              />\n            )}\n          </div>\n        )}\n\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","export const API = \"/api2\"\n\nexport const getFrontPageGoods = () => {\n    return fetch(`${API}/good?mode=list_all`,{\n        method:'GET',\n    }).then(response=>{\n        if(response.status===200){\n            return response.json()\n        }else{\n            return {result:[]}\n        }\n    })\n}","export const initialState = {\n  basket: [],\n  user: null\n};\n\n// Selector\nexport const getBasketTotal = (basket) => \n  basket?.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n    \n    case 'EMPTY_BASKET':\n      return {\n        ...state,\n        basket: []\n      }\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(\n        (basketItem) => basketItem.id === action.id\n      );\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n\n      } else {\n        console.warn(\n          `Cant remove product (id: ${action.id}) as its not in basket!`\n        )\n      }\n\n      return {\n        ...state,\n        basket: newBasket\n      }\n    \n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport \"./Subtotal.css\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from \"../../StateProvider\";\nimport { getBasketTotal } from \"../../../core/reducer\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Subtotal() {\n  const history = useHistory();\n  const [{ basket }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"subtotal\">\n      <CurrencyFormat\n        renderText={(value) => (\n          <>\n            <p>\n              {/* Part of the homework */}\n              Subtotal ({basket.length} items): <strong>{value}</strong>\n            </p>\n            <small className=\"subtotal__gift\">\n              <input type=\"checkbox\" /> This order contains a gift\n            </small>\n          </>\n        )}\n        decimalScale={2}\n        value={getBasketTotal(basket)} // Part of the homework\n        displayType={\"text\"}\n        thousandSeparator={true}\n        prefix={\"$\"}\n      />\n\n      <button onClick={e => history.push('/payment')}>Proceed to Checkout</button>\n    </div>\n  );\n}\n\nexport default Subtotal;\n","import React from 'react';\nimport './CheckoutProduct.css'\nimport { useStateValue } from \"../../StateProvider\";\n\nfunction CheckoutProduct({ id, image, title, price, rating, hideButton }) {\n    const [{ basket }, dispatch] = useStateValue();\n\n    const removeFromBasket = () => {\n        // remove the item from the basket\n        dispatch({\n            type: 'REMOVE_FROM_BASKET',\n            id: id,\n        })\n    }\n\n    return (\n        <div className='checkoutProduct'>\n            <img className='checkoutProduct__image' src={image} />\n\n            <div className='checkoutProduct__info'>\n                <p className='checkoutProduct__title'>{title}</p>\n                <p className=\"checkoutProduct__price\">\n                    <small>$</small>\n                    <strong>{price}</strong>\n                </p>\n                <div className=\"checkoutProduct__rating\">\n                    {Array(rating)\n                    .fill()\n                    .map((_, i) => (\n                        <p>🌟</p>\n                    ))}\n                </div>\n                {!hideButton && (\n                    <button onClick={removeFromBasket}>Remove from Basket</button>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default CheckoutProduct\n","import React from \"react\";\nimport \"./Checkout.css\";\nimport Subtotal from \"../components/subtotal/Subtotal\";\nimport { useStateValue } from \"../StateProvider\";\nimport CheckoutProduct from \"../components/checkoutproduct/CheckoutProduct\";\n\nfunction Checkout() {\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"checkout\">\n      <div className=\"checkout__left\">\n        <img\n          className=\"checkout__ad\"\n          src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\"\n          alt=\"\"\n        />\n\n        <div>\n          <h3>Hello, {user?.email}</h3>\n          <h2 className=\"checkout__title\">Your shopping Basket</h2>\n\n          {basket.map(item => (\n            <CheckoutProduct\n              id={item.id}\n              title={item.title}\n              image={item.image}\n              price={item.price}\n              rating={item.rating}\n            />\n          ))}\n\n        </div>\n      </div>\n\n      <div className=\"checkout__right\">\n        <Subtotal />\n      </div>\n    </div>\n  );\n}\n\nexport default Checkout;\n","import React, { useState } from 'react';\nimport './Login.css'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth } from \"../../core/firebase\";\n\nfunction Login() {\n    const history = useHistory();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const signIn = e => {\n        e.preventDefault();\n\n        auth\n            .signInWithEmailAndPassword(email, password)\n            .then(auth => {\n                history.push('/')\n            })\n            .catch(error => alert(error.message))\n    }\n\n    const register = e => {\n        e.preventDefault();\n\n        auth\n            .createUserWithEmailAndPassword(email, password)\n            .then((auth) => {\n                // it successfully created a new user with email and password\n                if (auth) {\n                    history.push('/')\n                }\n            })\n            .catch(error => alert(error.message))\n    }\n\n    return (\n        <div className='login'>\n            <Link to='/'>\n                <img\n                    className=\"login__logo\"\n                    src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png' \n                />\n            </Link>\n\n            <div className='login__container'>\n                <h1>Sign-in</h1>\n\n                <form>\n                    <h5>E-mail</h5>\n                    <input type='text' value={email} onChange={e => setEmail(e.target.value)} />\n\n                    <h5>Password</h5>\n                    <input type='password' value={password} onChange={e => setPassword(e.target.value)} />\n\n                    <button type='submit' onClick={signIn} className='login__signInButton'>Sign In</button>\n                </form>\n\n                <p>\n                    By signing-in you agree to the AMAZON FAKE CLONE Conditions of Use & Sale. Please\n                    see our Privacy Notice, our Cookies Notice and our Interest-Based Ads Notice.\n                </p>\n\n                <button onClick={register} className='login__registerButton'>Create your Amazon Account</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  // THE API (cloud function) URL\n  baseURL: 'https://us-central1-challenge-4b2b2.cloudfunctions.net/api'\n    // \"http://localhost:5001/challenge-4b2b2/us-central1/api\",\n});\n\nexport default instance;\n\n\n","import React, { useState, useEffect } from 'react';\nimport './Payment.css';\nimport { useStateValue } from \"../StateProvider\";\nimport CheckoutProduct from \"../components/checkoutproduct/CheckoutProduct\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"../../core/reducer\";\nimport axios from '../../core/axios';\nimport { db } from \"../../core/firebase\";\n\nfunction Payment() {\n    const [{ basket, user }, dispatch] = useStateValue();\n    const history = useHistory();\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState(true);\n\n    useEffect(() => {\n        // generate the special stripe secret which allows us to charge a customer\n        const getClientSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                // Stripe expects the total in a currencies subunits\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n            });\n            setClientSecret(response.data.clientSecret)\n        }\n\n        getClientSecret();\n    }, [basket])\n\n    console.log('THE SECRET IS >>>', clientSecret)\n    console.log('👱', user)\n\n    const handleSubmit = async (event) => {\n        // do all the fancy stripe stuff...\n        event.preventDefault();\n        setProcessing(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({ paymentIntent }) => {\n            // paymentIntent = payment confirmation\n\n            db\n              .collection('users')\n              .doc(user?.uid)\n              .collection('orders')\n              .doc(paymentIntent.id)\n              .set({\n                  basket: basket,\n                  amount: paymentIntent.amount,\n                  created: paymentIntent.created\n              })\n\n            setSucceeded(true);\n            setError(null)\n            setProcessing(false)\n\n            dispatch({\n                type: 'EMPTY_BASKET'\n            })\n\n            history.replace('/orders')\n        })\n\n    }\n\n    const handleChange = event => {\n        // Listen for changes in the CardElement\n        // and display any errors as the customer types their card details\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n\n    return (\n        <div className='payment'>\n            <div className='payment__container'>\n                <h1>\n                    Checkout (\n                        <Link to=\"/checkout\">{basket?.length} items</Link>\n                        )\n                </h1>\n\n\n                {/* Payment section - delivery address */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Delivery Address</h3>\n                    </div>\n                    <div className='payment__address'>\n                        <p>{user?.email}</p>\n                        <p>123 React Lane</p>\n                        <p>Los Angeles, CA</p>\n                    </div>\n                </div>\n\n                {/* Payment section - Review Items */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Review items and delivery</h3>\n                    </div>\n                    <div className='payment__items'>\n                        {basket.map(item => (\n                            <CheckoutProduct\n                                id={item.id}\n                                title={item.title}\n                                image={item.image}\n                                price={item.price}\n                                rating={item.rating}\n                            />\n                        ))}\n                    </div>\n                </div>\n            \n\n                {/* Payment section - Payment method */}\n                <div className='payment__section'>\n                    <div className=\"payment__title\">\n                        <h3>Payment Method</h3>\n                    </div>\n                    <div className=\"payment__details\">\n                            {/* Stripe magic will go */}\n\n                            <form onSubmit={handleSubmit}>\n                                <CardElement onChange={handleChange}/>\n\n                                <div className='payment__priceContainer'>\n                                    <CurrencyFormat\n                                        renderText={(value) => (\n                                            <h3>Order Total: {value}</h3>\n                                        )}\n                                        decimalScale={2}\n                                        value={getBasketTotal(basket)}\n                                        displayType={\"text\"}\n                                        thousandSeparator={true}\n                                        prefix={\"$\"}\n                                    />\n                                    <button disabled={processing || disabled || succeeded}>\n                                        <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                    </button>\n                                </div>\n\n                                  {/* Errors */}\n                                {error && <div>{error}</div>}\n                            </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Payment\n","import React from 'react'\nimport './Order.css'\nimport moment from \"moment\";\nimport CheckoutProduct from \"../checkoutproduct/CheckoutProduct\";\nimport CurrencyFormat from \"react-currency-format\";\n\nfunction Order({ order }) {\n    return (\n        <div className='order'>\n            <h2>Order</h2>\n            <p>{moment.unix(order.data.created).format(\"MMMM Do YYYY, h:mma\")}</p>\n            <p className=\"order__id\">\n                <small>{order.id}</small>\n            </p>\n            {order.data.basket?.map(item => (\n                <CheckoutProduct\n                    id={item.id}\n                    title={item.title}\n                    image={item.image}\n                    price={item.price}\n                    rating={item.rating}\n                    hideButton\n                />\n            ))}\n            <CurrencyFormat\n                renderText={(value) => (\n                    <h3 className=\"order__total\">Order Total: {value}</h3>\n                )}\n                decimalScale={2}\n                value={order.data.amount / 100}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={\"$\"}\n            />   \n        </div>\n    )\n}\n\nexport default Order\n","import React, { useState, useEffect } from 'react';\nimport { db } from \"../../core/firebase\";\nimport './Orders.css'\nimport { useStateValue } from \"../StateProvider\";\nimport Order from '../components/order/Order'\n\nfunction Orders() {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    if(user) {\n        db\n        .collection('users')\n        .doc(user?.uid)\n        .collection('orders')\n        .orderBy('created', 'desc')\n        .onSnapshot(snapshot => (\n            setOrders(snapshot.docs.map(doc => ({\n                id: doc.id,\n                data: doc.data()\n            })))\n        ))\n    } else {\n        setOrders([])\n    }\n\n  }, [user])\n\n    return (\n        <div className='orders'>\n            <h1>Your Orders</h1>\n\n            <div className='orders__order'>\n                {orders?.map(order => (\n                    <Order order={order} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Orders\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/Header\";\nimport Home from \"./home/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from \"./checkout/Checkout\";\nimport Login from \"./login/Login\";\nimport Payment from \"./payment/Payment\";\nimport Orders from \"./orders/Orders\";\nimport { auth } from \"../core/firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\nconst promise = loadStripe(\n  \"pk_test_51HPvU9DFg5koCdLGJJbNo60QAU99BejacsvnKvT8xnCu1wFLCuQP3WBArscK3RvSQmSIB3N0Pbsc7TtbQiJ1vaOi00X9sIbazL\"\n);\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // will only run once when the app component loads...\n\n    auth.onAuthStateChanged((authUser) => {\n      console.log(\"THE USER IS >>> \", authUser);\n\n      if (authUser) {\n        // the user just logged in / the user was logged in\n\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        });\n      } else {\n        // the user is logged out\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/orders\">\n            <Header />\n            <Orders />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer, { initialState } from \"./core/reducer\";\nimport { StateProvider } from \"./app/StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}