{"version":3,"sources":["app/StateProvider.js","core/firebase.js","app/components/header/Header.js","app/components/product/Product.js","core/good.js","core/category.js","app/home/Home.js","core/user.js","core/reducer.js","app/components/subtotal/Subtotal.js","app/components/checkoutproduct/CheckoutProduct.js","app/checkout/Checkout.js","app/login/Login.js","app/glist/GList.js","core/axios.js","app/payment/Payment.js","app/components/order/Order.js","app/orders/Orders.js","app/admin/admingoods/AdminGoods.js","app/admin/Admin.js","app/detail/Detail.js","core/suggestion.js","app/App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","basket","user","className","to","src","type","style","fontSize","onClick","signOut","email","length","Product","id","title","image","price","rating","dispatch","flex","href","color","fontWeight","Array","fill","map","_","i","alt","window","location","item","API","getAllCategories","fetch","method","then","res","status","json","result","createCategory","category_id","name","super_category_id","message","error","body","JSON","stringify","Home","React","useState","fp_goods","setFPGoods","categories","setCategories","visible","setVisible","useEffect","response","data","console","log","good_section","len","push","slice","password","a","success","info","identity","user_id","user_name","icon","MenuOutlined","ghost","section","good","good_id","placement","closable","onClose","getBasketTotal","reduce","amount","state","action","index","findIndex","basketItem","newBasket","splice","warn","Subtotal","history","useHistory","renderText","decimalScale","displayType","thousandSeparator","prefix","e","CheckoutProduct","hideButton","Checkout","Login","setEmail","setPassword","onChange","target","preventDefault","signInWithEmailAndPassword","catch","alert","createUserWithEmailAndPassword","GList","categoryId","URLSearchParams","useLocation","search","get","goods","setGoods","setCategoryName","cid","category_name","bordered","dataSource","renderItem","Item","disabled","instance","axios","create","baseURL","Payment","stripe","useStripe","elements","useElements","succeeded","setSucceeded","processing","setProcessing","setError","setDisabled","clientSecret","setClientSecret","url","getClientSecret","handleSubmit","event","confirmCardPayment","payment_method","card","getElement","CardElement","paymentIntent","collection","doc","uid","set","created","replace","onSubmit","empty","Order","order","moment","unix","format","Orders","orders","setOrders","orderBy","onSnapshot","snapshot","docs","AdminGoods","all_categories","setAllCategories","all_goods","setAllGoods","add_category_modal_shown","setAddCategoryModalShown","add_good_modal_shown","setAddGoodModalShown","edit_good_modal_shown","setEditGoodModalShown","add_category_form","useRef","add_good_form","Form","useForm","edit_good_form","textAlign","itemLayout","header","actions","key","avatar","loading","active","footer","display","flexDirection","justifyContent","onOk","current","submit","onCancel","ref","layout","abelCol","span","wrapperCol","initialValues","remember","onFinish","values","label","rules","required","marginTop","setFieldsValue","category","marginBottom","getFieldValue","form","gid","params","hidden","Admin","match","useRouteMatch","path","Detail","goodId","good_info","setGoodInfo","suggestions","setSuggestions","size","getSuggestionByGood","backgroundColor","description","promise","loadStripe","App","onAuthStateChanged","authUser","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"smBAGaA,EAAeC,0BAGfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC/CC,IAKQI,EAAgB,kBAAMC,qBAAWV,I,kBCCxCW,EAFcC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAKcC,YACjBC,EAAOV,IAASU,OCoDPC,MA3Df,WAAmB,IAAD,EACqBd,IADrB,0BACPe,EADO,EACPA,OAAQC,EADD,EACCA,KAQjB,OATgB,KAUd,yBAAKC,UAAU,cACb,kBAAC,IAAD,CAAMC,GAAG,KACP,yBACED,UAAU,mBACVE,IAAI,uDAIR,yBAAKF,UAAU,sBACb,2BAAOA,UAAU,0BAA0BG,KAAK,SAChD,4BAAQH,UAAU,0BAChB,kBAAC,IAAD,CAAYI,MAAO,CAACC,SAAS,YAIjC,yBAAKL,UAAU,mBACb,kBAAC,IAAD,CAAMC,IAAKF,GAAQ,UACjB,yBAAKO,QAxBe,WACtBP,GACFH,EAAKW,WAsBkCP,UAAU,sBAC3C,0BAAMA,UAAU,6BAAhB,SAAoDD,EAAiBA,EAAKS,MAAf,SAC3D,0BAAMR,UAAU,6BAA6BD,EAAO,WAAa,aAIrE,kBAAC,IAAD,CAAME,GAAG,WACP,yBAAKD,UAAU,sBACb,0BAAMA,UAAU,6BAAhB,WACA,0BAAMA,UAAU,6BAAhB,cAKJ,yBAAKA,UAAU,sBACb,0BAAMA,UAAU,6BAAhB,QACA,0BAAMA,UAAU,6BAAhB,UAGF,kBAAC,IAAD,CAAMC,GAAG,aACP,yBAAKD,UAAU,4BACb,kBAAC,IAAD,MACA,0BAAMA,UAAU,qDAAhB,OACGF,QADH,IACGA,OADH,EACGA,EAAQW,a,cCbRC,MAzCf,YAAuD,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAAU,EACrBhC,IADqB,mBACjCiC,GADiC,KAC3ClB,OAD2C,MAiBpD,OACE,yBAAKE,UAAU,UAAUI,MAAO,CAACa,KAAK,IACpC,yBAAKjB,UAAU,iBACb,uBAAGkB,KAAI,iBAAYP,IAAM,0BAAMP,MAAO,CAACe,MAAM,QAASd,SAAS,OAAQe,WAAW,MAAOR,IACzF,uBAAGM,KAAI,iBAAYP,IAAM,uBAAGX,UAAU,kBACpC,oCACA,gCAASc,KAEX,yBAAKd,UAAU,mBACZqB,MAAMN,GACJO,OACAC,KAAI,SAACC,EAAGC,GAAJ,OACH,gDAKR,yBAAKvB,IAAKW,EAAOa,IAAI,GAAGpB,QAAS,kBAAIqB,OAAOC,SAASV,KAAhB,iBAA+BP,MAEpE,4BAAQL,QAjCQ,WAElBU,EAAS,CACPb,KAAM,gBACN0B,KAAM,CACJlB,GAAIA,EACJC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,OAAQA,OAwBV,mB,iBCtCOe,EAAM,Q,0BCENC,EAAmB,WAC5B,OAAOC,MAAM,GAAD,OAHG,QAGH,2BAAiC,CACzCC,OAAO,QACRC,MAAK,SAAAC,GACJ,OAAgB,MAAbA,EAAIC,OACID,EAAIE,OAEJ,CAACC,OAAO,QAoBdC,EAAiB,SAACC,EAAYC,GAAiC,IAA5BC,EAA2B,uDAAT,KAI9D,OAHKF,GAAgBC,GACjBE,IAAQC,MAAM,oCAEXZ,MAAM,GAAD,OAjCG,QAiCH,aAAmB,CAC3BC,OAAO,OACPY,KAAKC,KAAKC,UAAU,CAChBP,cACAC,OACAC,wBAELR,MAAK,SAAAC,GACJ,GAAiB,MAAbA,EAAIC,OACJ,OAAOD,EAAIE,W,0BCmDRW,EAtFF,WAAO,IAAD,EAEgBC,IAAMC,SAAS,IAF/B,mBAETC,EAFS,KAECC,EAFD,OAIqBH,IAAMC,SAAS,IAJpC,mBAITG,EAJS,KAIGC,EAJH,OAMeL,IAAMC,UAAS,GAN9B,mBAMTK,EANS,KAMAC,EANA,KA8BjB,OAtBAP,IAAMQ,WAAU,WFZPzB,MAAM,GAAD,OAAIF,EAAJ,uBAA6B,CACrCG,OAAO,QACRC,MAAK,SAAAwB,GACJ,OAAqB,MAAlBA,EAAStB,OACDsB,EAASrB,OAET,CAACC,OAAO,OEStBJ,MAAK,SAAAyB,GACJC,QAAQC,IAAIF,GAEZ,IADA,IAAIG,EAAe,GACVrC,EAAE,EAAGsC,EAAIJ,EAAKrB,OAAO7B,OAAOgB,EAAEsC,EAAItC,GAAG,EAC5CqC,EAAaE,KAAKL,EAAKrB,OAAO2B,MAAMxC,EAAEA,EAAE,GAAGA,EAAE,GAAG,IAElD2B,EAAWU,MAGb/B,IACCG,MAAK,SAAAyB,GACJL,EAAcK,EAAKrB,WC1BdN,MAAM,GAAD,OAHG,QAGH,SAAe,CACvBC,OAAO,OACPY,KAAKC,KAAKC,UAAU,CAChBmB,SAAS,wBAEdhC,KALI,uCAKC,WAAMwB,GAAN,eAAAS,EAAA,yDACiB,MAAlBT,EAAStB,OADR,uBAEAO,IAAQyB,QAAQ,cAFhB,kBAGOV,EAASrB,QAHhB,UAIuB,MAAlBqB,EAAStB,OAJd,wBAOAO,IAAQ0B,KAAK,sBAPb,SAQmBrC,MAAM,GAAD,OAhBjB,QAgBiB,kBAAwB,CAC5CC,OAAO,OACPY,KAAKC,KAAKC,UAAU,CAChBuB,SAAS,gBACTJ,SAAS,wBAEdhC,MAAK,SAAAC,GACJ,OAAgB,MAAbA,EAAIC,OACID,EAAIE,OAEJ,CAACkC,QAAQ,SAlBxB,YAQMZ,EARN,QAqBSY,QArBT,wBAsBI5B,IAAQyB,QAAQ,kBAtBpB,6CAuBeT,GAvBf,IAuBqBa,UAAU,mBAvB/B,eAyBI7B,IAAQC,MAAM,6BAzBlB,kBA0BW,IA1BX,4CALD,yDD8BP,IAKA,yBAAK5C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAQI,MAAO,CAACgB,WAAW,IAAIf,SAAS,OAAQc,MAAM,SAAUsD,KAAM,kBAACC,EAAA,EAAD,MAAiBvE,KAAK,OAAOwE,OAAK,EACtGrE,QAAS,WACPkD,GAAW,KAFf,eASF,yBAAKxD,UAAU,kBACb,yBACEA,UAAU,cACVE,IAAI,6KACJwB,IAAI,KAGLyB,EAAS5B,KAAI,SAAAqD,GAAO,OACnB,yBAAK5E,UAAU,aACZ4E,EAAQrD,KAAI,SAAAsD,GAAI,OACf,kBAAC,EAAD,CACElE,GAAIkE,EAAKC,QACTlE,MAAOiE,EAAKpC,KACZ3B,MAAO+D,EAAK/D,MACZC,OAAQ8D,EAAK9D,OACbF,MAAOgE,EAAKhE,gBAQtB,kBAAC,IAAD,CACED,MAAM,gBACNmE,UAAU,OACVC,UAAU,EACVC,QAAS,WAAKzB,GAAW,IACzBD,QAASA,GAERF,EAAW9B,KAAI,SAAAM,GAAI,OAClB,kBAAC,IAAD,CAAQ1B,KAAK,OACXC,MAAO,CAACC,SAAS,OAAOe,WAAW,KACnCF,KAAI,kBAAaW,EAAKW,cAErBX,EAAKY,Y,kDEhFLyC,EAAiB,SAACpF,GAAD,cAC5BA,QAD4B,IAC5BA,OAD4B,EAC5BA,EAAQqF,QAAO,SAACC,EAAQvD,GAAT,OAAkBA,EAAKf,MAAQsE,IAAQ,IAgDzC3G,EA9CC,SAAC4G,EAAOC,GAEtB,OADA1B,QAAQC,IAAIyB,GACJA,EAAOnF,MACb,IAAK,gBACH,OAAO,2BACFkF,GADL,IAEEvF,OAAO,GAAD,mBAAMuF,EAAMvF,QAAZ,CAAoBwF,EAAOzD,SAGrC,IAAK,eACH,OAAO,2BACFwD,GADL,IAEEvF,OAAQ,KAGZ,IAAK,qBACH,IAAMyF,EAAQF,EAAMvF,OAAO0F,WACzB,SAACC,GAAD,OAAgBA,EAAW9E,KAAO2E,EAAO3E,MAEvC+E,EAAS,YAAOL,EAAMvF,QAW1B,OATIyF,GAAS,EACXG,EAAUC,OAAOJ,EAAO,GAGxB3B,QAAQgC,KAAR,mCAC8BN,EAAO3E,GADrC,4BAKK,2BACF0E,GADL,IAEEvF,OAAQ4F,IAGZ,IAAK,WACH,OAAO,2BACFL,GADL,IAEEtF,KAAMuF,EAAOvF,OAGjB,QACE,OAAOsF,ICdEQ,MA9Bf,WACE,IAAMC,EAAUC,cADE,EAEahH,IAFb,mBAETe,EAFS,KAETA,OAET,OAJkB,KAKhB,yBAAKE,UAAU,YACb,kBAAC,IAAD,CACEgG,WAAY,SAACnH,GAAD,OACV,oCACE,wCAEaiB,EAAOW,OAFpB,YAEoC,gCAAS5B,IAE7C,2BAAOmB,UAAU,kBACf,2BAAOG,KAAK,aADd,iCAKJ8F,aAAc,EACdpH,MAAOqG,EAAepF,GACtBoG,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,MAGV,4BAAQ9F,QAAS,SAAA+F,GAAC,OAAIP,EAAQ9B,KAAK,cAAnC,yB,OCQSsC,MApCf,YAA2E,IAAhD3F,EAA+C,EAA/CA,GAAIE,EAA2C,EAA3CA,MAAOD,EAAoC,EAApCA,MAAOE,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,OAAQwF,EAAc,EAAdA,WAAc,EACvCxH,IADuC,mBACnDiC,GADmD,KAC7DlB,OAD6D,MAWtE,OACI,yBAAKE,UAAU,mBACX,yBAAKA,UAAU,yBAAyBE,IAAKW,IAE7C,yBAAKb,UAAU,yBACX,uBAAGA,UAAU,0BAA0BY,GACvC,uBAAGZ,UAAU,0BACT,oCACA,gCAASc,IAEb,yBAAKd,UAAU,2BACVqB,MAAMN,GACNO,OACAC,KAAI,SAACC,EAAGC,GAAJ,OACD,gDAGN8E,GACE,4BAAQjG,QA1BC,WAErBU,EAAS,CACLb,KAAM,qBACNQ,GAAIA,MAsBI,yBCSL6F,MApCf,WAAqB,IAAD,EACmBzH,IADnB,0BACTe,EADS,EACTA,OAAQC,EADC,EACDA,KAEjB,OAHkB,KAIhB,yBAAKC,UAAU,YACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,eACVE,IAAI,+FACJwB,IAAI,KAGN,6BACE,6CAAY3B,QAAZ,IAAYA,OAAZ,EAAYA,EAAMS,OAClB,wBAAIR,UAAU,mBAAd,wBAECF,EAAOyB,KAAI,SAAAM,GAAI,OACd,kBAAC,EAAD,CACElB,GAAIkB,EAAKlB,GACTC,MAAOiB,EAAKjB,MACZC,MAAOgB,EAAKhB,MACZC,MAAOe,EAAKf,MACZC,OAAQc,EAAKd,cAOrB,yBAAKf,UAAU,mBACb,kBAAC,EAAD,S,OCgCOyG,MA/Df,WACI,IAAMX,EAAUC,cADH,EAEa7C,mBAAS,IAFtB,mBAEN1C,EAFM,KAECkG,EAFD,OAGmBxD,mBAAS,IAH5B,mBAGNgB,EAHM,KAGIyC,EAHJ,KA8Bb,OACI,yBAAK3G,UAAU,SACX,kBAAC,IAAD,CAAMC,GAAG,KACL,yBACID,UAAU,cACVE,IAAI,0GAIZ,yBAAKF,UAAU,oBACX,uCAEA,8BACI,sCACA,2BAAOG,KAAK,OAAOtB,MAAO2B,EAAOoG,SAAU,SAAAP,GAAC,OAAIK,EAASL,EAAEQ,OAAOhI,UAElE,wCACA,2BAAOsB,KAAK,WAAWtB,MAAOqF,EAAU0C,SAAU,SAAAP,GAAC,OAAIM,EAAYN,EAAEQ,OAAOhI,UAE5E,4BAAQsB,KAAK,SAASG,QA5CvB,SAAA+F,GACXA,EAAES,iBAEFlH,EACKmH,2BAA2BvG,EAAO0D,GAClChC,MAAK,SAAAtC,GACFkG,EAAQ9B,KAAK,QAEhBgD,OAAM,SAAApE,GAAK,OAAIqE,MAAMrE,EAAMD,aAoCmB3C,UAAU,uBAAjD,YAGJ,8LAKA,4BAAQM,QAzCH,SAAA+F,GACbA,EAAES,iBAEFlH,EACKsH,+BAA+B1G,EAAO0D,GACtChC,MAAK,SAACtC,GAECA,GACAkG,EAAQ9B,KAAK,QAGpBgD,OAAM,SAAApE,GAAK,OAAIqE,MAAMrE,EAAMD,aA8BG3C,UAAU,yBAArC,iC,2BCUDmH,EAjED,WAEV,IAAMC,EAAa,IAAIC,gBAAgBC,cAAcC,QAAQC,IAAI,OAFjD,EAIYvE,IAAMC,SAAS,IAJ3B,mBAIRuE,EAJQ,KAIDC,EAJC,OAK2BzE,IAAMC,WALjC,mBAKOyE,GALP,aAMsB1E,IAAMC,SAAS,IANrC,mBAMRG,EANQ,KAMIC,EANJ,KAqBhB,OAbAL,IAAMQ,WAAU,WT8Bc,IAACmE,KS7BRR,ET8BhBpF,MAAM,GAAD,OAAIF,EAAJ,+BAA8B8F,GAAM,CAC5C3F,OAAO,QACRC,MAAK,SAAAwB,GACJ,OAAqB,MAAlBA,EAAStB,OACDsB,EAASrB,OAET,CAACC,OAAO,QSnClBJ,MAAK,SAAAyB,GACF+D,EAAS/D,EAAKrB,QACdsB,QAAQC,IAAIF,EAAKrB,QACjBqF,EAAgBhE,EAAKkE,kBAEzB9F,IACCG,MAAK,SAAAyB,GACFL,EAAcK,EAAKrB,aAEzB,IAGE,yBAAKtC,UAAU,cACX,yBAAKA,UAAU,qBAAf,4BAGA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAQG,KAAK,OAAOe,KAAK,IAAId,MAAO,CAACC,SAAS,OAAOe,WAAW,MAAhE,QACCiC,EAAW9B,KAAI,SAAAM,GAAI,OAChB,kBAAC,IAAD,CAAQ1B,KAAK,OACTC,MAAO,CAACC,SAAS,OAAOe,WAAW,KACnCF,KAAI,kBAAaW,EAAKW,cAErBX,EAAKY,UAIlB,kBAAC,IAAD,CACIzC,UAAU,aACV8H,UAAU,EACVC,WAAYN,EACZO,WAAY,SAAAnG,GAAI,OACZ,kBAAC,IAAKoG,KAAN,CAAWjI,UAAU,cACjB,yBAAKA,UAAU,mBAAmBE,IAAK2B,EAAKhB,QAC5C,yBAAKb,UAAU,mBACX,uBAAGkB,KAAI,iBAAYW,EAAKiD,UACpB,0BAAM9E,UAAU,aAAa6B,EAAKY,OAEtC,kBAAC,IAAD,CAAMyF,UAAQ,EAACrJ,MAAOgD,EAAKd,SAC3B,uBAAGG,KAAI,iBAAYW,EAAKiD,UACpB,yBAAK9E,UAAU,cACX,0BAAMA,UAAU,oBAAhB,KACA,0BAAMA,UAAU,qBAAqB6B,EAAKf,iB,0BCpDnEqH,E,OANEC,EAAMC,OAAO,CAE5BC,QAAS,+DC8JIC,MAvJf,WAAoB,IAAD,EACsBxJ,IADtB,0BACNe,EADM,EACNA,OAAQC,EADF,EACEA,KAAQiB,EADV,KAET8E,EAAUC,cAEVyC,EAASC,sBACTC,EAAWC,wBALF,EAOmBzF,oBAAS,GAP5B,mBAOR0F,EAPQ,KAOGC,EAPH,OAQqB3F,mBAAS,IAR9B,mBAQR4F,EARQ,KAQIC,EARJ,OASW7F,mBAAS,MATpB,mBASRN,EATQ,KASDoG,EATC,OAUiB9F,oBAAS,GAV1B,mBAURgF,EAVQ,KAUEe,EAVF,OAWyB/F,oBAAS,GAXlC,mBAWRgG,EAXQ,KAWMC,EAXN,KAaf1F,qBAAU,YAEe,uCAAG,4BAAAU,EAAA,sEACGiE,EAAM,CACzBnG,OAAQ,OAERmH,IAAI,0BAAD,OAAqD,IAAzBlE,EAAepF,MAJ9B,OACd4D,EADc,OAMpByF,EAAgBzF,EAASC,KAAKuF,cANV,2CAAH,qDASrBG,KACD,CAACvJ,IAEJ8D,QAAQC,IAAI,oBAAqBqF,GACjCtF,QAAQC,IAAI,eAAM9D,GAElB,IAAMuJ,EAAY,uCAAG,WAAOC,GAAP,SAAApF,EAAA,6DAEjBoF,EAAMzC,iBACNiC,GAAc,GAHG,SAKKP,EAAOgB,mBAAmBN,EAAc,CAC1DO,eAAgB,CACZC,KAAMhB,EAASiB,WAAWC,kBAE/B1H,MAAK,YAAwB,IAArB2H,EAAoB,EAApBA,cAGP5K,EACG6K,WAAW,SACXC,IAFH,OAEOhK,QAFP,IAEOA,OAFP,EAEOA,EAAMiK,KACVF,WAAW,UACXC,IAAIF,EAAclJ,IAClBsJ,IAAI,CACDnK,OAAQA,EACRsF,OAAQyE,EAAczE,OACtB8E,QAASL,EAAcK,UAG7BrB,GAAa,GACbG,EAAS,MACTD,GAAc,GAEd/H,EAAS,CACLb,KAAM,iBAGV2F,EAAQqE,QAAQ,cA/BH,yDAAH,sDA2ClB,OACI,yBAAKnK,UAAU,WACX,yBAAKA,UAAU,sBACX,yCAEQ,kBAAC,IAAD,CAAMC,GAAG,aAAT,OAAsBH,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAQW,OAA9B,UAFR,KAQA,yBAAKT,UAAU,oBACX,yBAAKA,UAAU,kBACX,iDAEJ,yBAAKA,UAAU,oBACX,kCAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAMS,OACV,6CACA,gDAKR,yBAAKR,UAAU,oBACX,yBAAKA,UAAU,kBACX,0DAEJ,yBAAKA,UAAU,kBACVF,EAAOyB,KAAI,SAAAM,GAAI,OACZ,kBAAC,EAAD,CACIlB,GAAIkB,EAAKlB,GACTC,MAAOiB,EAAKjB,MACZC,MAAOgB,EAAKhB,MACZC,MAAOe,EAAKf,MACZC,OAAQc,EAAKd,cAQ7B,yBAAKf,UAAU,oBACX,yBAAKA,UAAU,kBACX,+CAEJ,yBAAKA,UAAU,oBAGP,0BAAMoK,SAAUd,GACZ,kBAAC,cAAD,CAAa1C,SAzDpB,SAAA2C,GAGjBN,EAAYM,EAAMc,OAClBrB,EAASO,EAAM3G,MAAQ2G,EAAM3G,MAAMD,QAAU,OAuDrB,yBAAK3C,UAAU,2BACX,kBAAC,IAAD,CACIgG,WAAY,SAACnH,GAAD,OACR,4CAAkBA,IAEtBoH,aAAc,EACdpH,MAAOqG,EAAepF,GACtBoG,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,MAEZ,4BAAQ8B,SAAUY,GAAcZ,GAAYU,GACxC,8BAAOE,EAAa,yCAAoB,aAK/ClG,GAAS,6BAAMA,S,kCCnHjC0H,OAhCf,YAA2B,IAAD,EAATC,EAAS,EAATA,MACb,OACI,yBAAKvK,UAAU,SACX,qCACA,2BAAIwK,IAAOC,KAAKF,EAAM5G,KAAKuG,SAASQ,OAAO,wBAC3C,uBAAG1K,UAAU,aACT,+BAAQuK,EAAM5J,KAJtB,UAMK4J,EAAM5G,KAAK7D,cANhB,aAMK,EAAmByB,KAAI,SAAAM,GAAI,OACxB,kBAAC,EAAD,CACIlB,GAAIkB,EAAKlB,GACTC,MAAOiB,EAAKjB,MACZC,MAAOgB,EAAKhB,MACZC,MAAOe,EAAKf,MACZC,OAAQc,EAAKd,OACbwF,YAAU,OAGlB,kBAAC,IAAD,CACIP,WAAY,SAACnH,GAAD,OACR,wBAAImB,UAAU,gBAAd,gBAA2CnB,IAE/CoH,aAAc,EACdpH,MAAO0L,EAAM5G,KAAKyB,OAAS,IAC3Bc,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,QCUTuE,OApCf,WAAmB,IAAD,EACqB5L,IADrB,0BACCgB,GADD,EACPD,OADO,EACCC,MADD,QAEYmD,mBAAS,KAFrB,mBAET0H,EAFS,KAEDC,EAFC,KAuBd,OAnBFpH,qBAAU,WACL1D,EACCd,EACC6K,WAAW,SACXC,IAFD,OAEKhK,QAFL,IAEKA,OAFL,EAEKA,EAAMiK,KACVF,WAAW,UACXgB,QAAQ,UAAW,QACnBC,YAAW,SAAAC,GAAQ,OAChBH,EAAUG,EAASC,KAAK1J,KAAI,SAAAwI,GAAG,MAAK,CAChCpJ,GAAIoJ,EAAIpJ,GACRgD,KAAMoG,EAAIpG,eAIlBkH,EAAU,MAGb,CAAC9K,IAGE,yBAAKC,UAAU,UACX,2CAEA,yBAAKA,UAAU,iBAAf,OACK4K,QADL,IACKA,OADL,EACKA,EAAQrJ,KAAI,SAAAgJ,GAAK,OACd,kBAAC,GAAD,CAAOA,MAAOA,U,kDCkPnBW,I,OA/QI,WAAO,IAAD,EAEwBjI,IAAMC,SAAS,IAFvC,mBAEbiI,EAFa,KAEGC,EAFH,OAGcnI,IAAMC,SAAS,IAH7B,mBAGbmI,EAHa,KAGFC,EAHE,OAKwBrI,IAAMC,SAAS,IALvC,6BAOrBD,IAAMQ,WAAU,WACZ1B,IACCG,MAAK,SAAAyB,GACFyH,EAAiBzH,EAAKrB,WdCvBN,MAAM,GAAD,OAAIF,EAAJ,uBAA6B,CACrCG,OAAO,QACRC,MAAK,SAAAwB,GACJ,OAAqB,MAAlBA,EAAStB,OACDsB,EAASrB,OAET,CAACC,OAAO,OcJlBJ,MAAK,SAAAyB,GACF2H,EAAY3H,EAAKrB,QACjBsB,QAAQC,IAAIF,EAAKrB,aAEvB,IAjBmB,MAmB0CW,IAAMC,UAAS,GAnBzD,mBAmBbqI,EAnBa,KAmBaC,EAnBb,OAoBkCvI,IAAMC,UAAS,GApBjD,mBAoBbuI,EApBa,KAoBSC,EApBT,OAqBoCzI,IAAMC,UAAS,GArBnD,mBAqBbyI,EArBa,KAqBUC,EArBV,KAsBfC,EAAoB5I,IAAM6I,SAC1BC,EAAgB9I,IAAM6I,SAvBP,EAwBIE,KAAKC,UAAvBC,EAxBc,oBA2BrB,OACI,yBAAKlM,UAAU,mBACX,wBAAII,MAAO,CAAC+L,UAAU,WAAtB,2CAEA,kBAAC,IAAD,CACInM,UAAU,qBACVoM,WAAW,aACXrE,WAAYoD,EACZrD,UAAQ,EACRuE,OAAQ,0CACRrE,WAAY,SAAAnG,GAAI,OACZ,kBAAC,IAAKoG,KAAN,CACIqE,QAAS,CAAC,uBAAGC,IAAI,sBAAP,QAAsC,uBAAGA,IAAI,sBAAP,UAEhD,kBAAC,KAAD,CAAUC,QAAM,EAAC5L,OAAO,EAAO6L,QAAS5K,EAAK4K,QAASC,QAAM,GAC5D,6BAAM7K,EAAKY,SAInBkK,OACI,yBAAKvM,MAAO,CAACwM,QAAQ,OAAOC,cAAc,MAAMC,eAAe,WAC3D,kBAAC,IAAD,CAAQxM,QAAS,kBAAIkL,GAAyB,KAA9C,UAKZ,kBAAC,KAAD,CACIjI,QAASgI,EACTwB,KAAM,WACFlB,EAAkBmB,QAAQC,SAC1BzB,GAAyB,IAE7B0B,SAAU,kBAAI1B,GAAyB,IACvC5K,MAAM,sBAEN,kBAAC,KAAD,CACIuM,IAAOtB,EACPuB,OAAQ,CACJC,QAAS,CAAEC,KAAM,GACjBC,WAAY,CAAED,KAAM,KAExBE,cAAe,CAAEC,UAAU,GAC3BC,SAAU,SAAAC,GACN/J,QAAQC,IAAI,WAAY8J,GACxBpL,EAAeoL,EAAOnL,YAAYmL,EAAOlL,KAAKkL,EAAOjL,mBACpDR,MAAK,SAAAyB,GACEA,IACAhB,IAAQyB,QAAQ,0CAChBrC,IACCG,MAAK,SAAAyB,GACFyH,EAAiBzH,EAAKrB,WAE1BkJ,GAAyB,SAKrC,kBAAC,KAAKvD,KAAN,CACI2F,MAAM,cACNnL,KAAK,cACLoL,MAAO,CAAC,CAAEC,UAAU,KAEpB,kBAAC,KAAD,OAGJ,kBAAC,KAAK7F,KAAN,CACI2F,MAAM,gBACNnL,KAAK,OACLoL,MAAO,CAAC,CAAEC,UAAU,KAEpB,kBAAC,KAAD,OAGJ,kBAAC,KAAK7F,KAAN,CACI2F,MAAM,+BACNnL,KAAK,qBAEL,kBAAC,KAAD,SAQZ,kBAAC,IAAD,CACIzC,UAAU,qBACVoM,WAAW,aACXrE,WAAYsD,EACZvD,UAAQ,EACR1H,MAAO,CAAC2N,UAAU,QAClB1B,OAAQ,0CACRrE,WAAY,SAAAnG,GAAI,OACZ,kBAAC,IAAKoG,KAAN,CACIqE,QAAS,CACL,kBAAC,IAAD,CACIhM,QAAS,WACLsL,GAAsB,GACtBhI,QAAQC,IAAIhC,GACZqK,EAAe8B,eAAe,CAC1BlJ,QAASjD,EAAKiD,QACdtC,YAAaX,EAAKoM,SAASpM,EAAKoM,SAASzL,YAAY,KACrDC,KAAMZ,EAAKY,QAGnBtC,KAAK,QAVT,UAgBJ,kBAAC,KAAD,CAAUqM,QAAM,EAAC5L,OAAO,EAAO6L,QAAS5K,EAAK4K,QAASC,QAAM,GAC5D,yBAAK1M,UAAU,kBAAkB6B,EAAKY,SAI9CkK,OACI,yBAAKvM,MAAO,CAACwM,QAAQ,OAAOC,cAAc,MAAMC,eAAe,WAC3D,kBAAC,IAAD,CAAQxM,QAAS,kBAAIkL,GAAyB,KAA9C,UAKZ,kBAAC,KAAD,CACIxL,UAAU,iBACVuD,QAASkI,EACTsB,KAAM,WACFhB,EAAciB,QAAQC,SACtBvB,GAAqB,IAEzBwB,SAAU,kBAAIxB,GAAqB,IACnC9K,MAAM,kBAEN,kBAAC,KAAD,CACIuM,IAAOpB,EACPqB,OAAQ,CACJC,QAAS,CAAEC,KAAM,GACjBC,WAAY,CAAED,KAAM,KAExBE,cAAe,CAAEC,UAAU,GAC3BC,SAAU,SAAAC,GACN/J,QAAQC,IAAI,WAAY8J,GACxBpL,EAAeoL,EAAOnL,YAAYmL,EAAOlL,KAAKkL,EAAOjL,mBACpDR,MAAK,SAAAyB,GACEA,IACAhB,IAAQyB,QAAQ,0CAChBrC,IACCG,MAAK,SAAAyB,GACFyH,EAAiBzH,EAAKrB,WAE1BkJ,GAAyB,SAMrC,kBAAC,KAAKvD,KAAN,CACI2F,MAAM,gBACNnL,KAAK,OACLoL,MAAO,CAAC,CAAEC,UAAU,KAEpB,kBAAC,KAAD,OAGJ,kBAAC,KAAK7F,KAAN,CACI2F,MAAM,+BACNnL,KAAK,eAEL,kBAAC,KAAD,SAKZ,kBAAC,KAAD,CACIzC,UAAU,kBACVuD,QAASoI,EACToB,KAAM,WACFb,EAAee,SACfrB,GAAsB,IAE1BsB,SAAU,kBAAItB,GAAsB,IACpChL,MAAM,kBAEN,yBAAKR,MAAO,CAAC8N,aAAa,SAA1B,YACchC,EAAeiC,cAAc,YAE3C,kBAAC,KAAD,CACIC,KAAQlC,EACRkB,OAAQ,CACJC,QAAS,CAAEC,KAAM,GACjBC,WAAY,CAAED,KAAM,KAExBE,cAAe,CAAEC,UAAU,GAC3BC,SAAU,SAAAC,GdrMN,IAACU,EAAIC,EcsML1K,QAAQC,IAAI,WAAY8J,IdtMvBU,EcuMQV,EAAO7I,QdvMXwJ,EcuMmB,CACpB9L,YAAYmL,EAAOnL,YACnBC,KAAKkL,EAAOlL,MdxM7BT,MAAM,GAAD,OAAIF,EAAJ,qBAAoBuM,GAAM,CAClCpM,OAAO,QACPY,KAAKC,KAAKC,UAAL,eACEuL,MAERpM,MAAK,SAAAwB,GACJ,OAAqB,MAAlBA,EAAStB,OACDsB,EAASrB,QAEhBM,IAAQC,MAAM,sBAAsBc,EAAStB,QACtC,UcgMMF,MAAK,SAAAyB,GACEA,IACAhB,IAAQyB,QAAQ,0CAChBrC,IACCG,MAAK,SAAAyB,GACFyH,EAAiBzH,EAAKrB,WAE1BkJ,GAAyB,SAMrC,kBAAC,KAAKvD,KAAN,CACI2F,MAAM,UACNnL,KAAK,UACL8L,QAAM,GAEN,kBAAC,KAAD,OAGJ,kBAAC,KAAKtG,KAAN,CACI2F,MAAM,YACNnL,KAAK,QAEL,kBAAC,KAAD,OAGJ,kBAAC,KAAKwF,KAAN,CACI2F,MAAM,cACNnL,KAAK,eAEL,kBAAC,KAAD,YCrPT+L,GAfD,WAEV,IAAMC,EAAQC,cAEd,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAI,UAAKF,EAAMrF,IAAX,WACP,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOuF,KAAI,UAAKF,EAAMrF,MAClB,kBAAC,IAAD,CAAUnJ,GAAE,UAAKwO,EAAMrF,IAAX,e,uCCuGbwF,GA1GA,WAEX,IAAMH,EAAQC,cAERG,EAAS,IAAIxH,gBAAgBC,cAAcC,QAAQC,IAAI,OAJ5C,EAMkBvE,IAAMC,WANxB,mBAMT4L,EANS,KAMEC,EANF,OAQuB9L,IAAMC,SAAS,IARtC,mBAQT8L,EARS,KAQIC,EARJ,KAuBjB,OAbAhM,IAAMC,UAAS,WhBoCQ,IAACmL,KgBnCRQ,EhBoCT7M,MAAM,GAAD,OAAIF,EAAJ,qBAAoBuM,GAAM,CAClCpM,OAAO,QACRC,MAAK,SAAAwB,GACJ,OAAqB,MAAlBA,EAAStB,OACDsB,EAASrB,OAET,SgBzCVH,MAAK,SAAAyB,GACFoL,EAAYpL,GACZC,QAAQC,IAAIF,MCrBW,SAAC0K,GAAkB,IAAba,EAAY,uDAAP,GAC1C,OAAOlN,MAAM,GAAD,OAHG,QAGH,2BAA0BqM,EAA1B,iBAAsCa,GAAO,CACrDjN,OAAO,QACRC,MAAK,SAAAC,GACJ,OAAgB,MAAbA,EAAIC,OACID,EAAIE,QAEXM,IAAQC,MAAM,mCACP,CAACN,OAAO,QDenB6M,CAAoBN,EAAO,GAC1B3M,MAAK,SAAAyB,GACFsL,EAAetL,EAAKrB,cAMxB,yBAAKtC,UAAU,cAAcI,MAAO,CAACgP,gBAAgB,UACjD,yBAAKpP,UAAU,sBACX,kBAAC,KAAD,KACI,kBAAC,KAAWiI,KAAZ,KACI,uBAAG/G,KAAK,KAAR,SAEJ,kBAAC,KAAW+G,KAAZ,KACI,uBAAG/G,KAAM4N,EAAUA,EAAUb,SAAV,kBAA8Ba,EAAUb,SAASzL,aAAc,IAAIiM,EAAMrF,KACvF0F,EAAUA,EAAUb,SAASa,EAAUb,SAASxL,KAAK,gBAAgB,eAG9E,kBAAC,KAAWwF,KAAZ,KACI,uBAAG/G,KAAMuN,EAAMrF,KAAM0F,EAAUA,EAAUrM,KAAK,iBAI1D,yBAAKzC,UAAU,kBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eAAeE,IAAK4O,EAAUA,EAAUjO,MAAM,KAC7D,yBAAKb,UAAU,eACX,4BAAK8O,EAAUA,EAAUrM,KAAK,cAC9B,kBAAC,IAAD,CAAMyF,UAAQ,EAACrJ,MAAOiQ,EAAUA,EAAU/N,OAAO,IACjD,kBAAC,KAAD,MACA,yBAAKf,UAAU,sBACV8O,EAAUA,EAAUO,YAAY,cAErC,kBAAC,KAAD,CAAOrP,UAAU,kBACb,yBAAKA,UAAU,qBACX,wCACA,yBAAKA,UAAU,cACX,0BAAMA,UAAU,oBAAhB,KACA,0BAAMA,UAAU,qBAAqB8O,GAAWA,EAAUhO,UAItE,yBAAKd,UAAU,kBACX,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAQA,UAAU,eAAlB,eACA,kBAAC,IAAD,CAAQA,UAAU,YAAlB,gBAOhB,yBAAKA,UAAU,eAEX,kBAAC,KAAD,CAASI,MAAO,CAAC2N,UAAU,SAA3B,iBACA,kBAAC,KAAD,KACKiB,EAAY/K,MAAM,EAAE,GAAG1C,KAAI,SAAAsD,GAAI,OAC5B,kBAAC,EAAD,CACIlE,GAAIkE,EAAKC,QACTlE,MAAOiE,EAAKpC,KACZ3B,MAAO+D,EAAK/D,MACZC,OAAQ8D,EAAK9D,OACbF,MAAOgE,EAAKhE,YAIxB,kBAAC,KAAD,KACKmO,EAAY/K,MAAM,EAAE,GAAG1C,KAAI,SAAAsD,GAAI,OAC5B,kBAAC,EAAD,CACIlE,GAAIkE,EAAKC,QACTlE,MAAOiE,EAAKpC,KACZ3B,MAAO+D,EAAK/D,MACZC,OAAQ8D,EAAK9D,OACbF,MAAOgE,EAAKhE,gBEpFtCyO,GAAUC,aACd,+GAuEaC,OApEf,WAAgB,IAAD,EACUzQ,IADV,yCACFiC,EADE,KA0Bb,OAvBAyC,qBAAU,WAGR7D,EAAK6P,oBAAmB,SAACC,GACvB9L,QAAQC,IAAI,mBAAoB6L,GAK9B1O,EAHE0O,EAGO,CACPvP,KAAM,WACNJ,KAAM2P,GAIC,CACPvP,KAAM,WACNJ,KAAM,YAIX,IAGD,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2O,KAAK,MACV,kBAAC,EAAD,MACA,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,OACV,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,MACA,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,MACA,kBAAC,WAAD,CAAUnG,OAAQ8G,IAChB,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOX,KAAK,KACV,kBAAC,EAAD,MACA,kBAAC,EAAD,WCrEQgB,QACW,cAA7BhO,OAAOC,SAASgO,UAEe,UAA7BjO,OAAOC,SAASgO,UAEhBjO,OAAOC,SAASgO,SAASnB,MACvB,2DCVNoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAerR,ahBVS,CAC1BoB,OAAQ,GACRC,KAAM,MgBQuCtB,QAASA,GAClD,kBAAC,GAAD,QAGJuR,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlO,MAAK,SAAAmO,GACJA,EAAaC,gBAEdtJ,OAAM,SAAApE,GACLgB,QAAQhB,MAAMA,EAAMD,c","file":"static/js/main.c11c7288.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\n// Prepares the dataLayer\nexport const StateContext = createContext();\n\n// Wrap our app and provide the Data layer\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\n// Pull information from the data layer\nexport const useStateValue = () => useContext(StateContext);\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCcPSKlYtpdzBoAC8soeSmIARMzVKzrf5I\",\n  authDomain: \"challenge-4b2b2.firebaseapp.com\",\n  databaseURL: \"https://challenge-4b2b2.firebaseio.com\",\n  projectId: \"challenge-4b2b2\",\n  storageBucket: \"challenge-4b2b2.appspot.com\",\n  messagingSenderId: \"962418448875\",\n  appId: \"1:962418448875:web:f6cce5eeaf819481f661ae\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };","import React from \"react\";\nimport \"./Header.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport { Link } from \"react-router-dom\";\nimport { useStateValue } from \"../../StateProvider\";\nimport { auth } from \"../../../core/firebase\";\n\nfunction Header() {\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  const handleAuthenticaton = () => {\n    if (user) {\n      auth.signOut();\n    }\n  }\n\n  return (\n    <div className=\"App-header\">\n      <Link to=\"/\">\n        <img\n          className=\"App-header__logo\"\n          src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"\n        />\n      </Link>\n\n      <div className=\"App-header__search\">\n        <input className=\"App-header__searchInput\" type=\"text\" />\n        <button className=\"App-header__searchIcon\">\n          <SearchIcon style={{fontSize:\"24px\"}} />\n        </button>\n      </div>\n\n      <div className=\"App-header__nav\">\n        <Link to={!user && '/login'}>\n          <div onClick={handleAuthenticaton} className=\"App-header__option\">\n            <span className=\"App-header__optionLineOne\">Hello {!user ? 'Guest' : user.email}</span>\n            <span className=\"App-header__optionLineTwo\">{user ? 'Sign Out' : 'Sign In'}</span>\n          </div>\n        </Link>\n\n        <Link to='/orders'>\n          <div className=\"App-header__option\">\n            <span className=\"App-header__optionLineOne\">Returns</span>\n            <span className=\"App-header__optionLineTwo\">& Orders</span>\n          </div>\n        </Link>\n        \n\n        <div className=\"App-header__option\">\n          <span className=\"App-header__optionLineOne\">Your</span>\n          <span className=\"App-header__optionLineTwo\">Prime</span>\n        </div>\n\n        <Link to=\"/checkout\">\n          <div className=\"App-header__optionBasket\">\n            <ShoppingBasketIcon />\n            <span className=\"App-header__optionLineTwo App-header__basketCount\">\n              {basket?.length}\n            </span>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./Product.css\";\nimport { useStateValue } from \"../../StateProvider\";\n\nfunction Product({ id, title, image, price, rating }) {\n  const [{ basket }, dispatch] = useStateValue();\n\n  const addToBasket = () => {\n    // dispatch the item into the data layer\n    dispatch({\n      type: \"ADD_TO_BASKET\",\n      item: {\n        id: id,\n        title: title,\n        image: image,\n        price: price,\n        rating: rating,\n      },\n    });\n  };\n\n  return (\n    <div className=\"product\" style={{flex:1}}>\n      <div className=\"product__info\">\n        <a href={`/g?gid=${id}`}><span style={{color:\"black\", fontSize:\"20px\", fontWeight:500}}>{title}</span></a>\n        <a href={`/g?gid=${id}`}><p className=\"product__price\">\n          <small>$</small>\n          <strong>{price}</strong>\n        </p></a>\n        <div className=\"product__rating\">\n          {Array(rating)\n            .fill()\n            .map((_, i) => (\n              <p>🌟</p>\n            ))}\n        </div>\n      </div>\n\n      <img src={image} alt=\"\" onClick={()=>window.location.href=`/g?gid=${id}`}/>\n\n      <button onClick={addToBasket}>Add to Basket</button>\n    </div>\n  );\n}\n\nexport default Product;\n","import { message } from \"antd\"\n\nexport const API = \"/api2\"\n\nexport const getFrontPageGoods = () => {\n    return fetch(`${API}/good?mode=list_all`,{\n        method:'GET',\n    }).then(response=>{\n        if(response.status===200){\n            return response.json()\n        }else{\n            return {result:[]}\n        }\n    })\n}\n\nexport const getAllGoods = () => {\n    return fetch(`${API}/good?mode=list_all`,{\n        method:'GET',\n    }).then(response=>{\n        if(response.status===200){\n            return response.json()\n        }else{\n            return {result:[]}\n        }\n    })\n}\n\n\nexport const editGood = (gid,params) => {\n    return fetch(`${API}/good?gid=${gid}`,{\n        method:'PATCH',\n        body:JSON.stringify({\n            ...params\n        })\n    }).then(response=>{\n        if(response.status===200){\n            return response.json()\n        }else{\n            message.error(\"Server Error, code=\"+response.status)\n            return null\n        }\n    })\n}\n\nexport const getGoodsByCategory = (cid) => {\n    return fetch(`${API}/good?mode=list&cid=${cid}`,{\n        method:'GET',\n    }).then(response=>{\n        if(response.status===200){\n            return response.json()\n        }else{\n            return {result:[]}\n        }\n    })\n}\n\nexport const getGoodById = (gid) => {\n    return fetch(`${API}/good?gid=${gid}`,{\n        method:'GET',\n    }).then(response=>{\n        if(response.status===200){\n            return response.json()\n        }else{\n            return null\n        }\n    })\n}","import { message } from \"antd\"\n\nexport const API = \"/api2\"\n\nexport const getAllCategories = () => {\n    return fetch(`${API}/category?list_all=True`,{\n        method:'GET'\n    }).then(res=>{\n        if(res.status===200){\n            return res.json()\n        }else{\n            return {result:[]}\n        }\n    })\n}\n\nexport const getCategories = (super_category) => {\n    return fetch(`${API}/good?super=${super_category}`,{\n        method:'GET'\n    }).then(response=>{\n        if(response.status===200){\n            return response.json()\n        }else{\n            message.error(\"Network failure\")\n            return{\n                result:[]\n            }\n        }\n    })\n}\n\nexport const createCategory = (category_id,name,super_category_id=null) => {\n    if((!category_id)||(!name)){\n        message.error(\"You should get all entry filled.\")\n    }\n    return fetch(`${API}/category`,{\n        method:'POST',\n        body:JSON.stringify({\n            category_id,\n            name,\n            super_category_id,\n        })\n    }).then(res=>{\n        if (res.status===201){\n            return res.json()\n        }\n    })\n}","import React from \"react\";\nimport \"./Home.css\";\nimport Product from \"../components/product/Product\";\nimport { getFrontPageGoods } from \"../../core/good\";\nimport { MenuOutlined } from '@ant-design/icons';\nimport { Button, Drawer } from 'antd'\nimport { getAllCategories } from \"../../core/category\";\nimport { autoLogin } from \"../../core/user\";\n\nconst Home = () => {\n\n  const [ fp_goods, setFPGoods ] = React.useState([])\n\n  const [ categories, setCategories ] = React.useState([])\n\n  const [ visible, setVisible ] = React.useState(false)\n\n  React.useEffect(()=>{\n\n    getFrontPageGoods()\n    .then(data=>{\n      console.log(data)\n      var good_section = []\n      for (var i=0, len=data.result.length;i<len;i+=3){\n        good_section.push(data.result.slice(i,i+2+(i+1)%2))\n      }\n      setFPGoods(good_section)\n    })\n\n    getAllCategories()\n    .then(data=>{\n      setCategories(data.result)\n    })\n\n    autoLogin()\n  },[])\n\n\n\n  return (\n    <div className=\"home\">\n      <div className=\"Home-heading\">\n        <Button style={{fontWeight:800,fontSize:\"18px\", color:\"white\"}} icon={<MenuOutlined/>} type=\"text\" ghost\n          onClick={()=>{\n            setVisible(true)\n          }}\n        >\n          Categories\n        </Button>\n        \n      </div>\n      <div className=\"Home-container\">\n        <img\n          className=\"home__image\"\n          src=\"https://images-eu.ssl-images-amazon.com/images/G/02/digital/video/merch2016/Hero/Covid19/Generic/GWBleedingHero_ENG_COVIDUPDATE__XSite_1500x600_PV_en-GB._CB428684220_.jpg\"\n          alt=\"\"\n        />\n\n        {fp_goods.map(section=>\n          <div className=\"home__row\">\n            {section.map(good=>\n              <Product\n                id={good.good_id}\n                title={good.name}\n                price={good.price}\n                rating={good.rating}\n                image={good.image}\n              />\n            )}\n          </div>\n        )}\n\n      </div>\n\n      <Drawer\n        title=\"Category Menu\"\n        placement=\"left\"\n        closable={true}\n        onClose={()=>{setVisible(false)}}\n        visible={visible}\n      >\n        {categories.map(item=>\n          <Button type=\"text\"\n            style={{fontSize:\"16px\",fontWeight:400}}\n            href={`/gl?cid=${item.category_id}`}\n          >\n            {item.name}\n          </Button>\n        )}\n      </Drawer>\n\n    </div>\n  );\n}\n\nexport default Home;\n","import { message } from \"antd\"\n\nexport const API = \"/api2\"\n\nexport const autoLogin = () => {\n    return fetch(`${API}/user`,{\n        method:'POST',\n        body:JSON.stringify({\n            password:\"Research-Password\",\n        })\n    }).then(async response=>{\n        if(response.status===200){\n            message.success(\"Auto Login\")\n            return response.json()\n        }else if(response.status===405){\n            // 正常情况下以上逻辑都可以交由后端成功处理\n            // 为了以防万一，如果登录失败则手动创建一个新用户\n            message.info(\"User Recreating...\")\n            const data = await fetch(`${API}/user?new=true`,{\n                method:'POST',\n                body:JSON.stringify({\n                    identity:\"Research-User\",\n                    password:\"Research-Password\"\n                })\n            }).then(res=>{\n                if(res.status===201){\n                    return res.json()\n                }else{\n                    return {user_id:null}\n                }\n            })\n            if (data.user_id){\n                message.success(\"User Recreated\")\n                return {...data, user_name:\"Research-User\"}\n            }else{\n                message.error(\"Unsolvable Error Occurred\")\n                return {}\n            }\n        }\n    })\n}","export const initialState = {\n  basket: [],\n  user: null\n};\n\n// Selector\nexport const getBasketTotal = (basket) => \n  basket?.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n    \n    case 'EMPTY_BASKET':\n      return {\n        ...state,\n        basket: []\n      }\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(\n        (basketItem) => basketItem.id === action.id\n      );\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n\n      } else {\n        console.warn(\n          `Cant remove product (id: ${action.id}) as its not in basket!`\n        )\n      }\n\n      return {\n        ...state,\n        basket: newBasket\n      }\n    \n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport \"./Subtotal.css\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from \"../../StateProvider\";\nimport { getBasketTotal } from \"../../../core/reducer\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Subtotal() {\n  const history = useHistory();\n  const [{ basket }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"subtotal\">\n      <CurrencyFormat\n        renderText={(value) => (\n          <>\n            <p>\n              {/* Part of the homework */}\n              Subtotal ({basket.length} items): <strong>{value}</strong>\n            </p>\n            <small className=\"subtotal__gift\">\n              <input type=\"checkbox\" /> This order contains a gift\n            </small>\n          </>\n        )}\n        decimalScale={2}\n        value={getBasketTotal(basket)} // Part of the homework\n        displayType={\"text\"}\n        thousandSeparator={true}\n        prefix={\"$\"}\n      />\n\n      <button onClick={e => history.push('/payment')}>Proceed to Checkout</button>\n    </div>\n  );\n}\n\nexport default Subtotal;\n","import React from 'react';\nimport './CheckoutProduct.css'\nimport { useStateValue } from \"../../StateProvider\";\n\nfunction CheckoutProduct({ id, image, title, price, rating, hideButton }) {\n    const [{ basket }, dispatch] = useStateValue();\n\n    const removeFromBasket = () => {\n        // remove the item from the basket\n        dispatch({\n            type: 'REMOVE_FROM_BASKET',\n            id: id,\n        })\n    }\n\n    return (\n        <div className='checkoutProduct'>\n            <img className='checkoutProduct__image' src={image} />\n\n            <div className='checkoutProduct__info'>\n                <p className='checkoutProduct__title'>{title}</p>\n                <p className=\"checkoutProduct__price\">\n                    <small>$</small>\n                    <strong>{price}</strong>\n                </p>\n                <div className=\"checkoutProduct__rating\">\n                    {Array(rating)\n                    .fill()\n                    .map((_, i) => (\n                        <p>🌟</p>\n                    ))}\n                </div>\n                {!hideButton && (\n                    <button onClick={removeFromBasket}>Remove from Basket</button>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default CheckoutProduct\n","import React from \"react\";\nimport \"./Checkout.css\";\nimport Subtotal from \"../components/subtotal/Subtotal\";\nimport { useStateValue } from \"../StateProvider\";\nimport CheckoutProduct from \"../components/checkoutproduct/CheckoutProduct\";\n\nfunction Checkout() {\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"checkout\">\n      <div className=\"checkout__left\">\n        <img\n          className=\"checkout__ad\"\n          src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\"\n          alt=\"\"\n        />\n\n        <div>\n          <h3>Hello, {user?.email}</h3>\n          <h2 className=\"checkout__title\">Your shopping Basket</h2>\n\n          {basket.map(item => (\n            <CheckoutProduct\n              id={item.id}\n              title={item.title}\n              image={item.image}\n              price={item.price}\n              rating={item.rating}\n            />\n          ))}\n\n        </div>\n      </div>\n\n      <div className=\"checkout__right\">\n        <Subtotal />\n      </div>\n    </div>\n  );\n}\n\nexport default Checkout;\n","import React, { useState } from 'react';\nimport './Login.css'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth } from \"../../core/firebase\";\n\nfunction Login() {\n    const history = useHistory();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const signIn = e => {\n        e.preventDefault();\n\n        auth\n            .signInWithEmailAndPassword(email, password)\n            .then(auth => {\n                history.push('/')\n            })\n            .catch(error => alert(error.message))\n    }\n\n    const register = e => {\n        e.preventDefault();\n\n        auth\n            .createUserWithEmailAndPassword(email, password)\n            .then((auth) => {\n                // it successfully created a new user with email and password\n                if (auth) {\n                    history.push('/')\n                }\n            })\n            .catch(error => alert(error.message))\n    }\n\n    return (\n        <div className='login'>\n            <Link to='/'>\n                <img\n                    className=\"login__logo\"\n                    src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png' \n                />\n            </Link>\n\n            <div className='login__container'>\n                <h1>Sign-in</h1>\n\n                <form>\n                    <h5>E-mail</h5>\n                    <input type='text' value={email} onChange={e => setEmail(e.target.value)} />\n\n                    <h5>Password</h5>\n                    <input type='password' value={password} onChange={e => setPassword(e.target.value)} />\n\n                    <button type='submit' onClick={signIn} className='login__signInButton'>Sign In</button>\n                </form>\n\n                <p>\n                    By signing-in you agree to the AMAZON FAKE CLONE Conditions of Use & Sale. Please\n                    see our Privacy Notice, our Cookies Notice and our Interest-Based Ads Notice.\n                </p>\n\n                <button onClick={register} className='login__registerButton'>Create your Amazon Account</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport './GList.css'\nimport { useLocation } from \"react-router-dom\";\nimport { getGoodsByCategory } from '../../core/good';\nimport { List, Rate, Button } from 'antd';\nimport { getAllCategories } from '../../core/category';\n\nconst GList = () => {\n\n    const categoryId = new URLSearchParams(useLocation().search).get('cid')\n\n    const [ goods, setGoods ] = React.useState([])\n    const [ category_name, setCategoryName ] = React.useState()\n    const [ categories, setCategories ] = React.useState([])\n\n    React.useEffect(()=>{\n        getGoodsByCategory(categoryId)\n        .then(data=>{\n            setGoods(data.result)\n            console.log(data.result)\n            setCategoryName(data.category_name)\n        })\n        getAllCategories()\n        .then(data=>{\n            setCategories(data.result)\n        })\n    },[])\n\n    return (\n        <div className=\"GList-page\">\n            <div className=\"GList-heading-bar\">\n                1-16 out of 2000 results\n            </div>\n            <div className=\"GList-main\">\n                <div className=\"Siding-menu\">\n                    <Button type=\"text\" href=\"/\" style={{fontSize:\"16px\",fontWeight:500}}>Back</Button>\n                    {categories.map(item=>\n                        <Button type=\"text\"\n                            style={{fontSize:\"16px\",fontWeight:400}}\n                            href={`/gl?cid=${item.category_id}`}\n                        >\n                            {item.name}\n                        </Button>\n                    )}\n                </div>\n                <List\n                    className=\"GList-list\"\n                    bordered={false}\n                    dataSource={goods}\n                    renderItem={item => (\n                        <List.Item className=\"GList-item\">\n                            <img className=\"GList-item-image\" src={item.image}></img>\n                            <div className=\"GList-item-info\">\n                                <a href={`/g?gid=${item.good_id}`}>\n                                    <span className=\"Good-name\">{item.name}</span>\n                                </a>\n                                <Rate disabled value={item.rating} />\n                                <a href={`/g?gid=${item.good_id}`}>\n                                    <div className=\"Good-price\">\n                                        <span className=\"Good-price-label\">$</span>\n                                        <span className=\"Good-price-number\">{item.price}</span>\n                                    </div>\n                                </a>\n                            </div>\n                        </List.Item>\n                    )}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default GList","import axios from \"axios\";\n\nconst instance = axios.create({\n  // THE API (cloud function) URL\n  baseURL: 'https://us-central1-challenge-4b2b2.cloudfunctions.net/api'\n    // \"http://localhost:5001/challenge-4b2b2/us-central1/api\",\n});\n\nexport default instance;\n\n\n","import React, { useState, useEffect } from 'react';\nimport './Payment.css';\nimport { useStateValue } from \"../StateProvider\";\nimport CheckoutProduct from \"../components/checkoutproduct/CheckoutProduct\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"../../core/reducer\";\nimport axios from '../../core/axios';\nimport { db } from \"../../core/firebase\";\n\nfunction Payment() {\n    const [{ basket, user }, dispatch] = useStateValue();\n    const history = useHistory();\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState(true);\n\n    useEffect(() => {\n        // generate the special stripe secret which allows us to charge a customer\n        const getClientSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                // Stripe expects the total in a currencies subunits\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n            });\n            setClientSecret(response.data.clientSecret)\n        }\n\n        getClientSecret();\n    }, [basket])\n\n    console.log('THE SECRET IS >>>', clientSecret)\n    console.log('👱', user)\n\n    const handleSubmit = async (event) => {\n        // do all the fancy stripe stuff...\n        event.preventDefault();\n        setProcessing(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({ paymentIntent }) => {\n            // paymentIntent = payment confirmation\n\n            db\n              .collection('users')\n              .doc(user?.uid)\n              .collection('orders')\n              .doc(paymentIntent.id)\n              .set({\n                  basket: basket,\n                  amount: paymentIntent.amount,\n                  created: paymentIntent.created\n              })\n\n            setSucceeded(true);\n            setError(null)\n            setProcessing(false)\n\n            dispatch({\n                type: 'EMPTY_BASKET'\n            })\n\n            history.replace('/orders')\n        })\n\n    }\n\n    const handleChange = event => {\n        // Listen for changes in the CardElement\n        // and display any errors as the customer types their card details\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n\n    return (\n        <div className='payment'>\n            <div className='payment__container'>\n                <h1>\n                    Checkout (\n                        <Link to=\"/checkout\">{basket?.length} items</Link>\n                        )\n                </h1>\n\n\n                {/* Payment section - delivery address */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Delivery Address</h3>\n                    </div>\n                    <div className='payment__address'>\n                        <p>{user?.email}</p>\n                        <p>123 React Lane</p>\n                        <p>Los Angeles, CA</p>\n                    </div>\n                </div>\n\n                {/* Payment section - Review Items */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Review items and delivery</h3>\n                    </div>\n                    <div className='payment__items'>\n                        {basket.map(item => (\n                            <CheckoutProduct\n                                id={item.id}\n                                title={item.title}\n                                image={item.image}\n                                price={item.price}\n                                rating={item.rating}\n                            />\n                        ))}\n                    </div>\n                </div>\n            \n\n                {/* Payment section - Payment method */}\n                <div className='payment__section'>\n                    <div className=\"payment__title\">\n                        <h3>Payment Method</h3>\n                    </div>\n                    <div className=\"payment__details\">\n                            {/* Stripe magic will go */}\n\n                            <form onSubmit={handleSubmit}>\n                                <CardElement onChange={handleChange}/>\n\n                                <div className='payment__priceContainer'>\n                                    <CurrencyFormat\n                                        renderText={(value) => (\n                                            <h3>Order Total: {value}</h3>\n                                        )}\n                                        decimalScale={2}\n                                        value={getBasketTotal(basket)}\n                                        displayType={\"text\"}\n                                        thousandSeparator={true}\n                                        prefix={\"$\"}\n                                    />\n                                    <button disabled={processing || disabled || succeeded}>\n                                        <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                    </button>\n                                </div>\n\n                                  {/* Errors */}\n                                {error && <div>{error}</div>}\n                            </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Payment\n","import React from 'react'\nimport './Order.css'\nimport moment from \"moment\";\nimport CheckoutProduct from \"../checkoutproduct/CheckoutProduct\";\nimport CurrencyFormat from \"react-currency-format\";\n\nfunction Order({ order }) {\n    return (\n        <div className='order'>\n            <h2>Order</h2>\n            <p>{moment.unix(order.data.created).format(\"MMMM Do YYYY, h:mma\")}</p>\n            <p className=\"order__id\">\n                <small>{order.id}</small>\n            </p>\n            {order.data.basket?.map(item => (\n                <CheckoutProduct\n                    id={item.id}\n                    title={item.title}\n                    image={item.image}\n                    price={item.price}\n                    rating={item.rating}\n                    hideButton\n                />\n            ))}\n            <CurrencyFormat\n                renderText={(value) => (\n                    <h3 className=\"order__total\">Order Total: {value}</h3>\n                )}\n                decimalScale={2}\n                value={order.data.amount / 100}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={\"$\"}\n            />   \n        </div>\n    )\n}\n\nexport default Order\n","import React, { useState, useEffect } from 'react';\nimport { db } from \"../../core/firebase\";\nimport './Orders.css'\nimport { useStateValue } from \"../StateProvider\";\nimport Order from '../components/order/Order'\n\nfunction Orders() {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    if(user) {\n        db\n        .collection('users')\n        .doc(user?.uid)\n        .collection('orders')\n        .orderBy('created', 'desc')\n        .onSnapshot(snapshot => (\n            setOrders(snapshot.docs.map(doc => ({\n                id: doc.id,\n                data: doc.data()\n            })))\n        ))\n    } else {\n        setOrders([])\n    }\n\n  }, [user])\n\n    return (\n        <div className='orders'>\n            <h1>Your Orders</h1>\n\n            <div className='orders__order'>\n                {orders?.map(order => (\n                    <Order order={order} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Orders\n","import React from 'react'\nimport { createCategory, getAllCategories } from '../../../core/category'\nimport { List, Skeleton, Button, Modal, Form, Input, message } from 'antd'\nimport './AdminGoods.css'\nimport { editGood, getAllGoods } from '../../../core/good'\nimport { Category } from '@material-ui/icons'\nconst AdminGoods = () => {\n    \n    const [ all_categories, setAllCategories ] = React.useState([])\n    const [ all_goods, setAllGoods ] = React.useState([])\n\n    const [ selected_goods, setSelectedGoods ] = React.useState([])\n    \n    React.useEffect(()=>{\n        getAllCategories()\n        .then(data=>{\n            setAllCategories(data.result)\n        })\n        getAllGoods()\n        .then(data=>{\n            setAllGoods(data.result)\n            console.log(data.result)\n        })\n    },[])\n\n    const [ add_category_modal_shown, setAddCategoryModalShown ] = React.useState(false)\n    const [ add_good_modal_shown, setAddGoodModalShown ] = React.useState(false)\n    const [ edit_good_modal_shown, setEditGoodModalShown ] = React.useState(false)\n    const add_category_form = React.useRef()\n    const add_good_form = React.useRef()\n    const [edit_good_form] = Form.useForm()\n\n\n    return (\n        <div className=\"AdminGoods-page\">\n            <h1 style={{textAlign:\"center\"}}>Manage the Goods, Categories and Labels</h1>\n            \n            <List\n                className=\"demo-loadmore-list\"\n                itemLayout=\"horizontal\"\n                dataSource={all_categories}\n                bordered\n                header={<h2>Categories</h2>}\n                renderItem={item => (\n                    <List.Item\n                        actions={[<a key=\"list-loadmore-edit\">Move</a>, <a key=\"list-loadmore-more\">more</a>]}\n                    >\n                        <Skeleton avatar title={false} loading={item.loading} active>\n                        <div>{item.name}</div>\n                        </Skeleton>\n                    </List.Item>\n                )}\n                footer={\n                    <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\"}}>\n                        <Button onClick={()=>setAddCategoryModalShown(true)}>Add</Button>\n                    </div>\n                }\n            />\n\n            <Modal\n                visible={add_category_modal_shown}\n                onOk={()=>{\n                    add_category_form.current.submit();\n                    setAddCategoryModalShown(false)\n                }}\n                onCancel={()=>setAddCategoryModalShown(false)}\n                title=\"Add a new category\"\n            >\n                <Form\n                    ref = {add_category_form}\n                    layout={{\n                        abelCol: { span: 8 },\n                        wrapperCol: { span: 16 }\n                    }}\n                    initialValues={{ remember: false }}\n                    onFinish={values => {\n                        console.log('Success:', values);\n                        createCategory(values.category_id,values.name,values.super_category_id)\n                        .then(data=>{\n                            if (data){\n                                message.success(\"You have successfully added a category\")\n                                getAllCategories()\n                                .then(data=>{\n                                    setAllCategories(data.result)\n                                })\n                                setAddCategoryModalShown(false)\n                            }\n                        })\n                    }}\n                >\n                    <Form.Item\n                        label=\"Category ID\"\n                        name=\"category_id\"\n                        rules={[{ required: true }]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Category Name\"\n                        name=\"name\"\n                        rules={[{ required: true }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    \n                    <Form.Item\n                        label=\"Super Category ID (Optional)\"\n                        name=\"super_category_id\"\n                    >\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n\n\n\n            <List\n                className=\"demo-loadmore-list\"\n                itemLayout=\"horizontal\"\n                dataSource={all_goods}\n                bordered\n                style={{marginTop:\"10px\"}}\n                header={<h2>Categories</h2>}\n                renderItem={item => (\n                    <List.Item\n                        actions={[\n                            <Button\n                                onClick={()=>{\n                                    setEditGoodModalShown(true)\n                                    console.log(item)\n                                    edit_good_form.setFieldsValue({\n                                        good_id: item.good_id,\n                                        category_id: item.category?item.category.category_id:null,\n                                        name: item.name,\n                                    });\n                                }}\n                                type=\"link\"\n                            >\n                                Edit\n                            </Button>\n                        ]}\n                    >\n                        <Skeleton avatar title={false} loading={item.loading} active>\n                        <div className=\"List-item-name\">{item.name}</div>\n                        </Skeleton>\n                    </List.Item>\n                )}\n                footer={\n                    <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\"}}>\n                        <Button onClick={()=>setAddCategoryModalShown(true)}>Add</Button>\n                    </div>\n                }\n            />\n\n            <Modal\n                className=\"Add-good-modal\"\n                visible={add_good_modal_shown}\n                onOk={()=>{\n                    add_good_form.current.submit();\n                    setAddGoodModalShown(false)\n                }}\n                onCancel={()=>setAddGoodModalShown(false)}\n                title=\"Add a new good\"\n            >\n                <Form\n                    ref = {add_good_form}\n                    layout={{\n                        abelCol: { span: 8 },\n                        wrapperCol: { span: 16 }\n                    }}\n                    initialValues={{ remember: false }}\n                    onFinish={values => {\n                        console.log('Success:', values);\n                        createCategory(values.category_id,values.name,values.super_category_id)\n                        .then(data=>{\n                            if (data){\n                                message.success(\"You have successfully added a category\")\n                                getAllCategories()\n                                .then(data=>{\n                                    setAllCategories(data.result)\n                                })\n                                setAddCategoryModalShown(false)\n                            }\n                        })\n                    }}\n                >\n\n                    <Form.Item\n                        label=\"Category Name\"\n                        name=\"name\"\n                        rules={[{ required: true }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    \n                    <Form.Item\n                        label=\"Super Category ID (Optional)\"\n                        name=\"category_id\"\n                    >\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n            <Modal\n                className=\"Edit-good-modal\"\n                visible={edit_good_modal_shown}\n                onOk={()=>{\n                    edit_good_form.submit();\n                    setEditGoodModalShown(false)\n                }}\n                onCancel={()=>setEditGoodModalShown(false)}\n                title=\"Edit this good\"\n            >\n                <div style={{marginBottom:\"20px\"}}>\n                    Good id: {edit_good_form.getFieldValue(\"good_id\")}\n                </div>\n                <Form\n                    form = {edit_good_form}\n                    layout={{\n                        abelCol: { span: 8 },\n                        wrapperCol: { span: 16 }\n                    }}\n                    initialValues={{ remember: false }}\n                    onFinish={values => {\n                        console.log('Success:', values);\n                        editGood(values.good_id,{\n                            category_id:values.category_id,\n                            name:values.name,\n                        })\n                        .then(data=>{\n                            if (data){\n                                message.success(\"You have successfully added a category\")\n                                getAllCategories()\n                                .then(data=>{\n                                    setAllCategories(data.result)\n                                })\n                                setAddCategoryModalShown(false)\n                            }\n                        })\n                    }}\n                >\n                    \n                    <Form.Item\n                        label=\"Good ID\"\n                        name=\"good_id\"\n                        hidden\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Good Name\"\n                        name=\"name\"\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Category ID\"\n                        name=\"category_id\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    \n                </Form>\n            </Modal>\n\n\n\n        </div>\n    )\n\n}\n\nexport default AdminGoods","import React from 'react'\nimport AdminGoods from './admingoods/AdminGoods'\nimport { Switch, Route, Redirect, useRouteMatch } from \"react-router-dom\";\n\nconst Admin = () => {\n\n    const match = useRouteMatch()\n    \n    return (\n        <Switch>\n            <Route path={`${match.url}/goods`}>\n                <AdminGoods />\n            </Route >\n            <Route path={`${match.url}`}>\n                <Redirect to={`${match.url}/goods`}></Redirect>\n            </Route >\n        </Switch>\n    )\n}\nexport default Admin","import React from 'react'\nimport { Breadcrumb, Button, Space } from 'antd';\nimport \"./Detail.css\"\nimport { useLocation, useRouteMatch } from \"react-router-dom\";\nimport { getGoodById } from '../../core/good';\nimport Item from 'antd/lib/list/Item';\nimport { Rate, Divider } from 'antd'\nimport { LocalDining } from '@material-ui/icons';\nimport Product from '../components/product/Product'\nimport { getSuggestionByGood } from '../../core/suggestion';\n\nconst Detail = () => {\n\n    const match = useRouteMatch()\n    \n    const goodId = new URLSearchParams(useLocation().search).get('gid')\n\n    const [ good_info, setGoodInfo ] = React.useState()\n\n    const [ suggestions, setSuggestions ] = React.useState([])\n\n    React.useState(()=>{\n        getGoodById(goodId)\n        .then(data=>{\n            setGoodInfo(data)\n            console.log(data)\n        })\n        getSuggestionByGood(goodId,8)\n        .then(data=>{\n            setSuggestions(data.result)\n        })\n    })\n\n\n    return (\n        <div className=\"Detail-page\" style={{backgroundColor:\"white\"}}>\n            <div className=\"Detail-heading-bar\">\n                <Breadcrumb>\n                    <Breadcrumb.Item>\n                        <a href=\"/\">Home</a>\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item>\n                        <a href={good_info?good_info.category?`/gl?cid=${good_info.category.category_id}`:\"/\":match.url}>\n                            {good_info?good_info.category?good_info.category.name:\"Uncategorized\":\"Loading...\"}\n                        </a>\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item>\n                        <a href={match.url}>{good_info?good_info.name:\"Loading...\"}</a>\n                    </Breadcrumb.Item>\n                </Breadcrumb>\n            </div>\n            <div className=\"Detail-contant\">\n                <div className=\"Detail-main\">\n                    <img className=\"Detail-image\" src={good_info?good_info.image:\"\"}></img>\n                    <div className=\"Detail-info\">\n                        <h1>{good_info?good_info.name:\"Loading...\"}</h1>\n                        <Rate disabled value={good_info?good_info.rating:0} />\n                        <Divider/>\n                        <div className=\"Detail-description\">\n                            {good_info?good_info.description:\"Loading...\"}\n                        </div>\n                        <Space className=\"Detail-choices\">\n                            <div className=\"Detail-choice-box\">\n                                <span>Price:</span>\n                                <div className=\"Good-price\">\n                                    <span className=\"Good-price-label\">$</span>\n                                    <span className=\"Good-price-number\">{good_info&&good_info.price}</span>\n                                </div>\n                            </div>\n                        </Space>\n                        <div className=\"Detail-actions\">\n                            <Space>\n                                <Button className=\"Add-to-cart\">Add to cart</Button>\n                                <Button className=\"Purchase\">Purchase</Button>\n                            </Space>\n                        </div>\n                    </div>\n                    \n                </div>\n\n                <div className=\"suggestions\">\n\n                    <Divider style={{marginTop:\"50px\"}}>Similar Goods</Divider>\n                    <Space>\n                        {suggestions.slice(0,4).map(good=>\n                            <Product\n                                id={good.good_id}\n                                title={good.name}\n                                price={good.price}\n                                rating={good.rating}\n                                image={good.image}\n                            />\n                        )}\n                    </Space>\n                    <Space >\n                        {suggestions.slice(4,8).map(good=>\n                            <Product\n                                id={good.good_id}\n                                title={good.name}\n                                price={good.price}\n                                rating={good.rating}\n                                image={good.image}\n                            />\n                        )}\n                    </Space>\n                    \n                </div>\n\n            </div>\n\n            \n            \n        </div>\n\n    )\n}\n\nexport default Detail","import { message } from \"antd\"\n\nexport const API = \"/api2\"\n\nexport const getSuggestionByGood = (gid, size=50) => {\n    return fetch(`${API}/suggestion?gid=${gid}&size=${size}`,{\n        method:'GET'\n    }).then(res=>{\n        if(res.status===200){\n            return res.json()\n        }else{\n            message.error(\"Please Check Network Connection\")\n            return {result:[]}\n        }\n    })\n}","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/Header\";\nimport Home from \"./home/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from \"./checkout/Checkout\";\nimport Login from \"./login/Login\";\nimport GList from \"./glist/GList\";\nimport Payment from \"./payment/Payment\";\nimport Orders from \"./orders/Orders\";\nimport { auth } from \"../core/firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Admin from \"./admin/Admin\";\nimport Detail from \"./detail/Detail\";\n\nconst promise = loadStripe(\n  \"pk_test_51HPvU9DFg5koCdLGJJbNo60QAU99BejacsvnKvT8xnCu1wFLCuQP3WBArscK3RvSQmSIB3N0Pbsc7TtbQiJ1vaOi00X9sIbazL\"\n);\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // will only run once when the app component loads...\n\n    auth.onAuthStateChanged((authUser) => {\n      console.log(\"THE USER IS >>> \", authUser);\n\n      if (authUser) {\n        // the user just logged in / the user was logged in\n\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        });\n      } else {\n        // the user is logged out\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/g\">\n            <Header />\n            <Detail />\n          </Route>\n          <Route path=\"/admin\">\n            <Admin />\n          </Route>\n          <Route path=\"/gl\">\n            <Header />\n            <GList />\n          </Route>\n          <Route path=\"/orders\">\n            <Header />\n            <Orders />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer, { initialState } from \"./core/reducer\";\nimport { StateProvider } from \"./app/StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}